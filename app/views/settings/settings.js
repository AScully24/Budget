"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable = require("data/observable");
var observableArray = require("data/observable-array");
var appSettings = require("application-settings");
var frameModule = require("ui/frame");
var viewModel;
var currencyIndexName = "currencyIndex";
var items = new observableArray.ObservableArray();
function pageLoaded(args) {
    var page = args.object;
    var currencyIndex = 0;
    viewModel = new observable.Observable();
    for (var item in items) {
        items.pop();
    }
    items.push("Â£");
    items.push("$");
    viewModel.set("availableCurrencies", items);
    viewModel.set(currencyIndexName, appSettings.getNumber(currencyIndexName, 0));
    page.bindingContext = viewModel;
}
exports.pageLoaded = pageLoaded;
function currencyChange(args) {
    appSettings.setString("currency", items.getItem(args.newIndex).toString());
    appSettings.setNumber(currencyIndexName, args.newIndex);
}
exports.currencyChange = currencyChange;
exports.paySettings = function () {
    var topmost = frameModule.topmost();
    topmost.navigate("views/pay-settings/pay-settings");
};
exports.monthlyBills = function () {
    var topmost = frameModule.topmost();
    topmost.navigate("views/monthly-bills-settings/monthly-bills-settings");
};
exports.tagSettings = function () {
    var topmost = frameModule.topmost();
    topmost.navigate("views/tag-settings/tag-settings");
};
exports.datePicker = function () {
    var topmost = frameModule.topmost();
    topmost.navigate("views/pay-settings/date-picker.component");
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXR0aW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDRDQUErQztBQUMvQyx1REFBMEQ7QUFJMUQsa0RBQXFEO0FBQ3JELElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN0QyxJQUFJLFNBQWdDLENBQUM7QUFHckMsSUFBSSxpQkFBaUIsR0FBRSxlQUFlLENBQUM7QUFDdkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxlQUFlLENBQUMsZUFBZSxFQUFFLENBQUM7QUFFbEQsb0JBQTJCLElBQTBCO0lBQ2pELElBQUksSUFBSSxHQUE2QixJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ2pELElBQUksYUFBYSxHQUFHLENBQUMsQ0FBQztJQUN0QixTQUFTLEdBQUcsSUFBSSxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7SUFFeEMsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNyQixLQUFLLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEIsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVoQixTQUFTLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVDLFNBQVMsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRS9FLElBQUksQ0FBQyxjQUFjLEdBQUcsU0FBUyxDQUFDO0FBQ3BDLENBQUM7QUFmRCxnQ0FlQztBQUVELHdCQUErQixJQUFtQztJQUM5RCxXQUFXLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQzNFLFdBQVcsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVELENBQUM7QUFIRCx3Q0FHQztBQUVELE9BQU8sQ0FBQyxXQUFXLEdBQUU7SUFDakIsSUFBSSxPQUFPLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3BDLE9BQU8sQ0FBQyxRQUFRLENBQUMsaUNBQWlDLENBQUMsQ0FBQTtBQUN2RCxDQUFDLENBQUE7QUFFRCxPQUFPLENBQUMsWUFBWSxHQUFHO0lBQ25CLElBQUksT0FBTyxHQUFHLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNwQyxPQUFPLENBQUMsUUFBUSxDQUFDLHFEQUFxRCxDQUFDLENBQUE7QUFDM0UsQ0FBQyxDQUFBO0FBRUQsT0FBTyxDQUFDLFdBQVcsR0FBRztJQUNsQixJQUFJLE9BQU8sR0FBRyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDcEMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFBO0FBQ3ZELENBQUMsQ0FBQTtBQUVELE9BQU8sQ0FBQyxVQUFVLEdBQUU7SUFDaEIsSUFBSSxPQUFPLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3BDLE9BQU8sQ0FBQyxRQUFRLENBQUMsMENBQTBDLENBQUMsQ0FBQTtBQUNoRSxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb2JzZXJ2YWJsZSA9IHJlcXVpcmUoXCJkYXRhL29ic2VydmFibGVcIik7XG5pbXBvcnQgb2JzZXJ2YWJsZUFycmF5ID0gcmVxdWlyZShcImRhdGEvb2JzZXJ2YWJsZS1hcnJheVwiKTtcbmltcG9ydCBwYWdlcyA9IHJlcXVpcmUoXCJ1aS9wYWdlXCIpO1xuaW1wb3J0IHsgU2VsZWN0ZWRJbmRleENoYW5nZWRFdmVudERhdGEgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWRyb3AtZG93blwiO1xuXG5pbXBvcnQgYXBwU2V0dGluZ3MgPSByZXF1aXJlKFwiYXBwbGljYXRpb24tc2V0dGluZ3NcIik7XG52YXIgZnJhbWVNb2R1bGUgPSByZXF1aXJlKFwidWkvZnJhbWVcIik7XG52YXIgdmlld01vZGVsOiBvYnNlcnZhYmxlLk9ic2VydmFibGU7XG5cblxudmFyIGN1cnJlbmN5SW5kZXhOYW1lPSBcImN1cnJlbmN5SW5kZXhcIjtcbnZhciBpdGVtcyA9IG5ldyBvYnNlcnZhYmxlQXJyYXkuT2JzZXJ2YWJsZUFycmF5KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWdlTG9hZGVkKGFyZ3M6IG9ic2VydmFibGUuRXZlbnREYXRhKSB7XG4gICAgbGV0IHBhZ2UgOiBwYWdlcy5QYWdlID0gPHBhZ2VzLlBhZ2U+IGFyZ3Mub2JqZWN0O1xuICAgIHZhciBjdXJyZW5jeUluZGV4ID0gMDtcbiAgICB2aWV3TW9kZWwgPSBuZXcgb2JzZXJ2YWJsZS5PYnNlcnZhYmxlKCk7XG4gICAgXG4gICAgZm9yICh2YXIgaXRlbSBpbiBpdGVtcykge1xuICAgICAgICBpdGVtcy5wb3AoKTtcbiAgICB9XG4gICAgaXRlbXMucHVzaChcIsKjXCIpO1xuICAgIGl0ZW1zLnB1c2goXCIkXCIpO1xuICAgIFxuICAgIHZpZXdNb2RlbC5zZXQoXCJhdmFpbGFibGVDdXJyZW5jaWVzXCIsIGl0ZW1zKTtcbiAgICB2aWV3TW9kZWwuc2V0KGN1cnJlbmN5SW5kZXhOYW1lLCAgYXBwU2V0dGluZ3MuZ2V0TnVtYmVyKGN1cnJlbmN5SW5kZXhOYW1lLCAwKSk7XG5cbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gdmlld01vZGVsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3VycmVuY3lDaGFuZ2UoYXJnczogU2VsZWN0ZWRJbmRleENoYW5nZWRFdmVudERhdGEpIHtcbiAgICBhcHBTZXR0aW5ncy5zZXRTdHJpbmcoXCJjdXJyZW5jeVwiLCBpdGVtcy5nZXRJdGVtKGFyZ3MubmV3SW5kZXgpLnRvU3RyaW5nKCkpO1xuICAgIGFwcFNldHRpbmdzLnNldE51bWJlcihjdXJyZW5jeUluZGV4TmFtZSwgYXJncy5uZXdJbmRleCk7XG59XG5cbmV4cG9ydHMucGF5U2V0dGluZ3M9IGZ1bmN0aW9uICgpe1xuICAgIHZhciB0b3Btb3N0ID0gZnJhbWVNb2R1bGUudG9wbW9zdCgpO1xuICAgIHRvcG1vc3QubmF2aWdhdGUoXCJ2aWV3cy9wYXktc2V0dGluZ3MvcGF5LXNldHRpbmdzXCIpICAgIFxufVxuXG5leHBvcnRzLm1vbnRobHlCaWxscyA9IGZ1bmN0aW9uICgpe1xuICAgIHZhciB0b3Btb3N0ID0gZnJhbWVNb2R1bGUudG9wbW9zdCgpO1xuICAgIHRvcG1vc3QubmF2aWdhdGUoXCJ2aWV3cy9tb250aGx5LWJpbGxzLXNldHRpbmdzL21vbnRobHktYmlsbHMtc2V0dGluZ3NcIikgICAgXG59XG5cbmV4cG9ydHMudGFnU2V0dGluZ3MgPSBmdW5jdGlvbiAoKXtcbiAgICB2YXIgdG9wbW9zdCA9IGZyYW1lTW9kdWxlLnRvcG1vc3QoKTtcbiAgICB0b3Btb3N0Lm5hdmlnYXRlKFwidmlld3MvdGFnLXNldHRpbmdzL3RhZy1zZXR0aW5nc1wiKSAgICBcbn1cblxuZXhwb3J0cy5kYXRlUGlja2VyPSBmdW5jdGlvbiAoKXtcbiAgICB2YXIgdG9wbW9zdCA9IGZyYW1lTW9kdWxlLnRvcG1vc3QoKTtcbiAgICB0b3Btb3N0Lm5hdmlnYXRlKFwidmlld3MvcGF5LXNldHRpbmdzL2RhdGUtcGlja2VyLmNvbXBvbmVudFwiKSAgICBcbn0iXX0=